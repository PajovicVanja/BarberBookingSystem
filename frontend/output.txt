=== container\Dockerfile ===
# ---------- 1) BUILD stage ----------------------------------------------------
FROM node:18-alpine AS build

WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci            # install deps *inside the image*

COPY . .
RUN npm run build     # → creates /app/dist

# ---------- 2) RUNTIME stage --------------------------------------------------
FROM nginx:alpine

# CORS + SPA fallback
COPY nginx.conf /etc/nginx/conf.d/default.conf

# remove default html and copy our dist
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]


=== container\nginx.conf ===
# nginx.conf  (place it next to each Dockerfile)
server {
  listen 80;
  root /usr/share/nginx/html;

  # allow the JS to be loaded cross-origin
  add_header Access-Control-Allow-Origin "*" always;
  add_header Cross-Origin-Resource-Policy "cross-origin" always;

  # history-fallback for SPA routes
  location / {
    try_files $uri $uri/ /index.html;
  }
}

=== container\package.json ===
{
    "name": "container",
    "version": "1.0.0",
    "private": true,
    "scripts": {
        "start": "webpack serve --env PORT=3001 --open",
        "build": "webpack --mode production"
    },
    "dependencies": {
        "react": "^18.3.0",
        "react-dom": "^18.3.0",
        "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
        "@babel/core": "^7.24.5",
        "@babel/preset-react": "^7.24.5",
        "babel-loader": "^9.1.4",
        "css-loader": "^7.1.2",
        "html-webpack-plugin": "^5.5.3",
        "style-loader": "^4.0.0",
        "webpack": "^5.92.0",
        "webpack-cli": "^5.1.4",
        "webpack-dev-server": "^4.15.2"
    }
}


=== container\public\index.html ===
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Barber Booking – Web UI</title>
</head>
<body>
  <div class="barber-pole"></div>
  <div id="root"></div>
</body>
</html>


=== container\src\bootstrap.js ===
// container/src/bootstrap.js
import './styles.css';
import React, { Suspense, lazy } from 'react';
import ReactDOM from 'react-dom/client';
import {
  BrowserRouter,
  Routes,
  Route,
  Navigate,
  Link,
  useNavigate,
  useLocation,
} from 'react-router-dom';

const UsersApp        = lazy(() => import('UsersMF/App'));
const ReservationsApp = lazy(() => import('ReservationsMF/App'));
const PaymentsApp     = lazy(() => import('PaymentsMF/App'));

const Nav = () => {
  const token = localStorage.getItem('token');
  const navigate = useNavigate();
  const location = useLocation();

  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate('/users/login', { replace: true });
  };

  return (
    <nav className="navbar">
      <div className="logo icon-scissors">Barber Booking</div>
      {!token && <Link to="/users/login">Login</Link>}
      {!token && <Link to="/users/register">Register</Link>}

      {token && (
        <>
          <Link to="/users/profile">Profile</Link>
          <button onClick={handleLogout}>Logout</button>
        </>
      )}

      <Link to="/reservations">Reservations</Link>
      <Link to="/payments">Payments</Link>
    </nav>
  );
};

const Shell = () => (
  <BrowserRouter>
    <Nav />
    <Suspense fallback={<p>Loading…</p>}>
      <Routes>
        <Route path="/" element={<Navigate to="/users/login" replace />} />
        <Route path="/users/*"        element={<UsersApp />} />
        <Route path="/reservations/*" element={<ReservationsApp />} />
        <Route path="/payments/*"     element={<PaymentsApp />} />
      </Routes>
    </Suspense>
  </BrowserRouter>
);

ReactDOM.createRoot(document.getElementById('root')).render(<Shell />);


=== container\src\index.js ===
// ONLY for standalone dev – single-spa style bootstrap
import('./bootstrap');


=== container\src\styles.css ===
/* src/styles.css */

/* color palette */
:root {
  --barber-red:    #c0392b;
  --barber-blue:   #2980b9;
  --light-gray:    #f5f5f5;
  --dark-text:     #2c3e50;
}

/* global resets & body */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background: var(--light-gray);
  color: var(--dark-text);
  line-height: 1.6;
}

/* barber-pole stripe at top */
.barber-pole {
  height: 6px;
  background: repeating-linear-gradient(
    45deg,
    var(--barber-red) 0,
    var(--barber-red) 10px,
    var(--barber-blue) 10px,
    var(--barber-blue) 20px
  );
}

/* nav bar */
.navbar {
  display: flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  background: white;
  border-bottom: 2px solid var(--barber-red);
}
.navbar .logo {
  font-size: 1.25rem;
  font-weight: bold;
  margin-right: auto;
}
.navbar a,
.navbar button {
  margin-left: 1rem;
  text-decoration: none;
  color: var(--dark-text);
  font-weight: 600;
  background: none;
  border: none;
  cursor: pointer;
}
.navbar a:hover,
.navbar button:hover {
  color: var(--barber-red);
}

/* container wrapper */
.container {
  max-width: 800px;
  margin: 2rem auto;
  padding: 0 1rem;
}

/* cards for reservations/payments/etc. */
.card {
  background: white;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  padding: 1.5rem;
  margin-bottom: 1.5rem;
}

/* forms */
form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
label {
  font-weight: 600;
}
input, select, textarea {
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 1rem;
}
button {
  padding: 0.6rem 1.2rem;
  font-size: 1rem;
  color: white;
  background: var(--barber-red);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  align-self: flex-start;
}
button.secondary {
  background: var(--barber-blue);
}
button:hover {
  opacity: 0.9;
}

/* headings */
h2 {
  margin-top: 0;
  color: var(--barber-red);
}

/* little scissors icon utility */
.icon-scissors::before {
  content: "✂️ ";
}


=== container\webpack.config.js ===
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;
const path = require('path');

module.exports = (_, argv) => ({
  entry: './src/bootstrap.js',
  mode: argv.mode || 'development',
 devServer: { port: 3001, historyApiFallback: true },
  output: {
    publicPath: 'auto',
    clean: true,
   crossOriginLoading: 'anonymous',
  },
  resolve: { extensions: ['.js', '.jsx'] },
  module: {
    rules: [
      { test: /\.css$/i, use: ['style-loader', 'css-loader'] },
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: { loader: 'babel-loader', options: { presets: ['@babel/preset-react'] } }
      }
    ]
  },
  plugins: [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name: 'container',
      remotes: {
        UsersMF:        'usersMf@http://localhost:3002/remoteEntry.js',
        ReservationsMF: 'reservationsMf@http://localhost:3003/remoteEntry.js',
        PaymentsMF:     'paymentsMf@http://localhost:3004/remoteEntry.js'
      },
      shared: {
        react:             { singleton: true, eager: true, requiredVersion: false },
        'react-dom':       { singleton: true, eager: true, requiredVersion: false },
        'react-router-dom':{ singleton: true, eager: true, requiredVersion: false }
      }
    })
  ]
});


=== payments-mf\Dockerfile ===
# ---------- 1) BUILD stage ----------------------------------------------------
FROM node:18-alpine AS build

WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci            # install deps *inside the image*

COPY . .
RUN npm run build     # → creates /app/dist

# ---------- 2) RUNTIME stage --------------------------------------------------
FROM nginx:alpine

# CORS + SPA fallback
COPY nginx.conf /etc/nginx/conf.d/default.conf

# remove default html and copy our dist
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]


=== payments-mf\nginx.conf ===
# nginx.conf  (place it next to each Dockerfile)
server {
  listen 80;
  root /usr/share/nginx/html;

  # allow the JS to be loaded cross-origin
  add_header Access-Control-Allow-Origin "*" always;
  add_header Cross-Origin-Resource-Policy "cross-origin" always;

  # history-fallback for SPA routes
  location / {
    try_files $uri $uri/ /index.html;
  }
}

=== payments-mf\package.json ===
{
    "name": "payments-mf",
    "version": "1.0.0",
    "private": true,
    "scripts": {
        "start": "webpack serve --env PORT=3004 --open",
        "build": "webpack --mode production"
    },
    "dependencies": {
        "axios": "^1.8.0",
        "react": "^18.3.0",
        "react-dom": "^18.3.0",
        "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
        "@babel/core": "^7.24.5",
        "@babel/preset-react": "^7.24.5",
        "babel-loader": "^9.1.4",
        "css-loader": "^7.1.2",
        "html-webpack-plugin": "^5.5.3",
        "style-loader": "^4.0.0",
        "webpack": "^5.92.0",
        "webpack-cli": "^5.1.4",
        "webpack-dev-server": "^4.15.2"
    }
}


=== payments-mf\public\index.html ===
<!doctype html><html lang="en"><head><meta charset="utf-8"><title>payments MF</title></head>
<body><div id="root"></div></body></html>


=== payments-mf\src\App.js ===
// payments-mf/src/App.js
import './styles.css';
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Routes, Route } from 'react-router-dom';

const paymentsApi = axios.create({
  baseURL: 'http://localhost:4000/api/payments',
});
const reservationsApi = axios.create({
  baseURL: 'http://localhost:4000/api/reservations',
});

function decodeToken(token) {
  try {
    return JSON.parse(atob(token.split('.')[1]));
  } catch {
    return {};
  }
}

function CreatePayment() {
  const token   = localStorage.getItem('token');
  const { id: user_id } = decodeToken(token);
  const [reservations, setReservations] = useState([]);
  const [form, setForm] = useState({
    user_id: user_id || '',
    reservation_id: '',
    amount: '',
    payment_method: 'cash',
  });

  useEffect(() => {
    if (user_id) {
      reservationsApi
        .get(`/user/${user_id}`, { headers: { Authorization: `Bearer ${token}` } })
        .then(res => {
          setReservations(res.data.filter(r => r.status === 'accepted'));
          setForm(f => ({ ...f, user_id }));
        })
        .catch(console.error);
    }
  }, [user_id, token]);

  const handleSubmit = async e => {
    e.preventDefault();
    try {
      const res = await paymentsApi.post(
        '',
        {
          user_id:        Number(form.user_id),
          reservation_id: form.reservation_id,
          amount:         parseFloat(form.amount),
          payment_method: form.payment_method,
        },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert('Payment processed: ' + JSON.stringify(res.data));
    } catch (err) {
      console.error(err);
      alert('Failed to process payment:\n' + JSON.stringify(err.response?.data, null, 2));
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h2 className="icon-scissors">Create Payment</h2>
        <p><strong>User:</strong> {user_id}</p>
        <form onSubmit={handleSubmit}>
          <label>
            Reservation:
            <select
              value={form.reservation_id}
              onChange={e => setForm({ ...form, reservation_id: e.target.value })}
              required
            >
              <option value="">— choose reservation —</option>
              {reservations.map(r => (
                <option key={r.id} value={r.id}>
                  {new Date(r.appointment_time).toLocaleString()} ({r.status})
                </option>
              ))}
            </select>
          </label>
          <label>
            Amount (€):
            <input
              type="number"
              value={form.amount}
              onChange={e => setForm({ ...form, amount: e.target.value })}
              required
            />
          </label>
          <label>
            Method:
            <select
              value={form.payment_method}
              onChange={e => setForm({ ...form, payment_method: e.target.value })}
            >
              <option value="cash">Cash</option>
              <option value="credit_card">Credit Card</option>
            </select>
          </label>
          <button type="submit">Pay</button>
        </form>
      </div>
    </div>
  );
}

function ListPayments() {
  const token   = localStorage.getItem('token');
  const { id: user_id } = decodeToken(token);
  const [payments, setPayments] = useState([]);

  useEffect(() => {
    if (user_id) {
      paymentsApi
        .get(`/user/${user_id}`, { headers: { Authorization: `Bearer ${token}` } })
        .then(res => setPayments(res.data))
        .catch(console.error);
    }
  }, [user_id, token]);

  return (
    <div className="container">
      <div className="card">
        <h2 className="icon-scissors">My Payments</h2>
        <ul>
          {payments.map(p => (
            <li key={p.id}>
              €{p.amount.toFixed(2)} — {p.status} (on {new Date(p.created_at).toLocaleString()})
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

function BarberPayments() {
  const token   = localStorage.getItem('token');
  const { id: barber_id } = decodeToken(token);
  const [payments, setPayments] = useState([]);

  useEffect(() => {
    if (barber_id) {
      paymentsApi
        .get(`/barber/${barber_id}`, { headers: { Authorization: `Bearer ${token}` } })
        .then(res => setPayments(res.data))
        .catch(console.error);
    }
  }, [barber_id, token]);

  const handleDelete = async id => {
    try {
      await paymentsApi.delete(`/${id}`, { headers: { Authorization: `Bearer ${token}` } });
      setPayments(ps => ps.filter(p => p.id !== id));
    } catch (err) {
      console.error(err);
      alert('Failed to delete payment');
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h2 className="icon-scissors">Barber Payments</h2>
        <ul>
          {payments.map(p => (
            <li key={p.id} style={{ marginBottom: 16 }}>
              <div>
                <strong>Customer #{p.user_id}</strong> paid <strong>€{p.amount.toFixed(2)}</strong> via <em>{p.payment_method}</em>
              </div>
              <div><small>{new Date(p.created_at).toLocaleString()}</small></div>
              <button onClick={() => handleDelete(p.id)}>Delete</button>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

export default function App() {
  const token = localStorage.getItem('token');
  const { role } = decodeToken(token);

  return (
    <Routes>
      {role === 'barber' ? (
        <Route index element={<BarberPayments />} />
      ) : (
        <>
          <Route index element={<CreatePayment />} />
          <Route path="list" element={<ListPayments />} />
        </>
      )}
    </Routes>
  );
}


=== payments-mf\src\bootstrap.js ===
import './styles.css';
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from 'react-router-dom';

const mount = (el) => {
  ReactDOM.createRoot(el).render(
    <BrowserRouter>
      <App />
    </BrowserRouter>
  );
};

export default mount;

if (process.env.NODE_ENV === 'development') {
  const root = document.getElementById('root');
  if (root) {
    mount(root);
  }
}


=== payments-mf\src\index.js ===
import('./bootstrap');


=== payments-mf\src\styles.css ===
/* src/styles.css */

/* color palette */
:root {
  --barber-red:    #c0392b;
  --barber-blue:   #2980b9;
  --light-gray:    #f5f5f5;
  --dark-text:     #2c3e50;
}

/* global resets & body */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background: var(--light-gray);
  color: var(--dark-text);
  line-height: 1.6;
}

/* barber-pole stripe at top */
.barber-pole {
  height: 6px;
  background: repeating-linear-gradient(
    45deg,
    var(--barber-red) 0,
    var(--barber-red) 10px,
    var(--barber-blue) 10px,
    var(--barber-blue) 20px
  );
}

/* nav bar */
.navbar {
  display: flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  background: white;
  border-bottom: 2px solid var(--barber-red);
}
.navbar .logo {
  font-size: 1.25rem;
  font-weight: bold;
  margin-right: auto;
}
.navbar a,
.navbar button {
  margin-left: 1rem;
  text-decoration: none;
  color: var(--dark-text);
  font-weight: 600;
  background: none;
  border: none;
  cursor: pointer;
}
.navbar a:hover,
.navbar button:hover {
  color: var(--barber-red);
}

/* container wrapper */
.container {
  max-width: 800px;
  margin: 2rem auto;
  padding: 0 1rem;
}

/* cards for reservations/payments/etc. */
.card {
  background: white;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  padding: 1.5rem;
  margin-bottom: 1.5rem;
}

/* forms */
form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
label {
  font-weight: 600;
}
input, select, textarea {
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 1rem;
}
button {
  padding: 0.6rem 1.2rem;
  font-size: 1rem;
  color: white;
  background: var(--barber-red);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  align-self: flex-start;
}
button.secondary {
  background: var(--barber-blue);
}
button:hover {
  opacity: 0.9;
}

/* headings */
h2 {
  margin-top: 0;
  color: var(--barber-red);
}

/* little scissors icon utility */
.icon-scissors::before {
  content: "✂️ ";
}


=== payments-mf\webpack.config.js ===
// payments-mf/webpack.config.js
const HtmlWebpackPlugin        = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;

module.exports = (_, argv) => ({
  entry : './src/bootstrap.js',
  mode  : argv.mode || 'development',

  devServer : {
    port              : 3004,
    historyApiFallback: true,
    headers           : {
      'Access-Control-Allow-Origin' : '*',
      'Cross-Origin-Resource-Policy': 'cross-origin',
    },
  },

  optimization : { splitChunks: false, runtimeChunk: false },

  output : {
    publicPath         : 'auto',
    clean              : true,
    crossOriginLoading : 'anonymous',
  },

  resolve : { extensions: ['.js', '.jsx'] },

  module  : {
    rules : [
      { test: /\.css$/i, use: ['style-loader', 'css-loader'] },
      {
        test   : /\.jsx?$/,
        exclude: /node_modules/,
        use    : { loader: 'babel-loader', options: { presets: ['@babel/preset-react'] } },
      },
    ],
  },

  plugins : [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name    : 'paymentsMf',
      filename: 'remoteEntry.js',
      exposes : { './App': './src/App' },
      shared  : {
        react             : { singleton: true, eager: true, requiredVersion: false },
        'react-dom'       : { singleton: true, eager: true, requiredVersion: false },
        'react-router-dom': { singleton: true, eager: true, requiredVersion: false },
      },
    }),
  ],
});


=== reservations-mf\Dockerfile ===
# ---------- 1) BUILD stage ----------------------------------------------------
FROM node:18-alpine AS build

WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci            # install deps *inside the image*

COPY . .
RUN npm run build     # → creates /app/dist

# ---------- 2) RUNTIME stage --------------------------------------------------
FROM nginx:alpine

# CORS + SPA fallback
COPY nginx.conf /etc/nginx/conf.d/default.conf

# remove default html and copy our dist
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]


=== reservations-mf\nginx.conf ===
# nginx.conf  (place it next to each Dockerfile)
server {
  listen 80;
  root /usr/share/nginx/html;

  # allow the JS to be loaded cross-origin
  add_header Access-Control-Allow-Origin "*" always;
  add_header Cross-Origin-Resource-Policy "cross-origin" always;

  # history-fallback for SPA routes
  location / {
    try_files $uri $uri/ /index.html;
  }
}

=== reservations-mf\package.json ===
{
    "name": "reservations-mf",
    "version": "1.0.0",
    "private": true,
    "scripts": {
        "start": "webpack serve --env PORT=3003 --open",
        "build": "webpack --mode production"
    },
    "dependencies": {
        "axios": "^1.8.0",
        "react": "^18.3.0",
        "react-dom": "^18.3.0",
        "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
        "@babel/core": "^7.24.5",
        "@babel/preset-react": "^7.24.5",
        "babel-loader": "^9.1.4",
        "css-loader": "^7.1.2",
        "html-webpack-plugin": "^5.5.3",
        "style-loader": "^4.0.0",
        "webpack": "^5.92.0",
        "webpack-cli": "^5.1.4",
        "webpack-dev-server": "^4.15.2"
    }
}


=== reservations-mf\public\index.html ===
<!doctype html><html lang="en"><head><meta charset="utf-8"><title>reservations MF</title></head>
<body><div id="root"></div></body></html>


=== reservations-mf\src\App.js ===
// reservations-mf/src/App.js
import './styles.css';                  
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Routes, Route } from 'react-router-dom';

const reservationApi = axios.create({
  baseURL: 'http://localhost:4000/api/reservations',
});
const usersApi = axios.create({
  baseURL: 'http://localhost:4000/api/users',
});

function decodeToken(token) {
  try {
    return JSON.parse(atob(token.split('.')[1]));
  } catch {
    return {};
  }
}

function CreateReservation() {
  const token   = localStorage.getItem('token');
  const { id: user_id } = decodeToken(token);
  const [barbers, setBarbers] = useState([]);
  const [form, setForm] = useState({
    user_id:          user_id || '',
    barber_id:        '',
    appointment_time: '',
  });

  useEffect(() => {
    if (token) {
      usersApi
        .get('/barbers', { headers: { Authorization: `Bearer ${token}` } })
        .then(res => setBarbers(res.data))
        .catch(console.error);
      setForm(f => ({ ...f, user_id }));
    }
  }, [token, user_id]);

  const handleSubmit = async e => {
    e.preventDefault();
    try {
      const res = await reservationApi.post(
        '',
        {
          user_id:          String(user_id),
          barber_id:        String(form.barber_id),
          appointment_time: new Date(form.appointment_time).toISOString(),
        },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert('Reservation created: ' + JSON.stringify(res.data));
    } catch (err) {
      console.error(err);
      alert('Failed to create reservation:\n' +
            JSON.stringify(err.response?.data, null, 2));
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h2 className="icon-scissors">Create Reservation</h2>
        <p><strong>User:</strong> {user_id}</p>
        <form onSubmit={handleSubmit}>
          <label>
            Barber:
            <select
              value={form.barber_id}
              onChange={e => setForm({ ...form, barber_id: e.target.value })}
              required
            >
              <option value="">— choose barber —</option>
              {barbers.map(b => (
                <option key={b.id} value={b.id}>{b.username}</option>
              ))}
            </select>
          </label>

          <label>
            Appointment Time:
            <input
              type="datetime-local"
              value={form.appointment_time}
              onChange={e => setForm({ ...form, appointment_time: e.target.value })}
              required
            />
          </label>

          <button type="submit">Create</button>
        </form>
      </div>
    </div>
  );
}

function ListReservations() {
  const token   = localStorage.getItem('token');
  const { id: user_id } = decodeToken(token);
  const [reservations, setReservations] = useState([]);

  useEffect(() => {
    if (user_id) {
      reservationApi
        .get(`/user/${user_id}`, { headers: { Authorization: `Bearer ${token}` } })
        .then(res => setReservations(res.data))
        .catch(console.error);
    }
  }, [user_id, token]);

  return (
    <div className="container">
      <div className="card">
        <h2 className="icon-scissors">My Reservations</h2>
        <ul>
          {reservations.map(r => (
            <li key={r.id} style={{ marginBottom: 12 }}>
              {new Date(r.appointment_time).toLocaleString()} — {r.status}
              {r.status === 'declined' && <div>{r.message}</div>}
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

function BarberReservations() {
  const token   = localStorage.getItem('token');
  const { id: barber_id } = decodeToken(token);
  const [reservations, setReservations] = useState([]);
  const [msgs, setMsgs] = useState({});

  useEffect(() => {
    if (barber_id) {
      reservationApi
        .get(`/barber/${barber_id}`, { headers: { Authorization: `Bearer ${token}` } })
        .then(res => setReservations(res.data))
        .catch(console.error);
    }
  }, [barber_id, token]);

  function respond(resId, accept) {
    const message = msgs[resId] || '';
    reservationApi
      .patch(`/${resId}`,
             { status: accept ? 'accepted' : 'declined', message },
             { headers: { Authorization: `Bearer ${token}` } })
      .then(() => {
        setReservations(rs =>
          rs.map(r =>
            r.id === resId
              ? { ...r, status: accept ? 'accepted' : 'declined', message }
              : r
          )
        );
      })
      .catch(console.error);
  }

  const handleDelete = async id => {
    try {
      await reservationApi.delete(`/${id}`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      setReservations(rs => rs.filter(r => r.id !== id));
    } catch (err) {
      console.error(err);
      alert('Failed to delete reservation');
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h2 className="icon-scissors">Incoming Reservations</h2>
        <ul style={{ listStyle: 'none', padding: 0 }}>
          {reservations.map(r => (
            <li key={r.id} style={{ marginBottom: 24, borderBottom: '1px solid #eee', paddingBottom: 12 }}>
              <div>
                Customer #{r.user_id} — {new Date(r.appointment_time).toLocaleString()} — {r.status}
              </div>
              {r.status === 'pending' && (
                <div style={{ marginTop: 8 }}>
                  <button onClick={() => respond(r.id, true)} style={{ marginRight: 8 }}>Accept</button>
                  <textarea
                    placeholder="Decline message"
                    value={msgs[r.id] || ''}
                    onChange={e => setMsgs({ ...msgs, [r.id]: e.target.value })}
                    style={{ verticalAlign: 'top', marginRight: 8 }}
                  />
                  <button onClick={() => respond(r.id, false)}>Decline</button>
                </div>
              )}
              <button onClick={() => handleDelete(r.id)} style={{ marginTop: 8 }}>Delete</button>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

export default function App() {
  const token = localStorage.getItem('token');
  const { role } = decodeToken(token);

  return (
    <Routes>
      {role === 'barber' ? (
        <Route index element={<BarberReservations />} />
      ) : (
        <>
          <Route index element={<CreateReservation />} />
          <Route path="list" element={<ListReservations />} />
        </>
      )}
    </Routes>
  );
}


=== reservations-mf\src\bootstrap.js ===
import './styles.css';
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from 'react-router-dom';

const mount = el => {
  ReactDOM.createRoot(el).render(
    <BrowserRouter>
      <App />
    </BrowserRouter>
  );
};

export default mount;

if (process.env.NODE_ENV === 'development') {
  const root = document.getElementById('root');
  if (root) mount(root);
}


=== reservations-mf\src\index.js ===
import('./bootstrap');


=== reservations-mf\src\styles.css ===
/* src/styles.css */

/* color palette */
:root {
  --barber-red:    #c0392b;
  --barber-blue:   #2980b9;
  --light-gray:    #f5f5f5;
  --dark-text:     #2c3e50;
}

/* global resets & body */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background: var(--light-gray);
  color: var(--dark-text);
  line-height: 1.6;
}

/* barber-pole stripe at top */
.barber-pole {
  height: 6px;
  background: repeating-linear-gradient(
    45deg,
    var(--barber-red) 0,
    var(--barber-red) 10px,
    var(--barber-blue) 10px,
    var(--barber-blue) 20px
  );
}

/* nav bar */
.navbar {
  display: flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  background: white;
  border-bottom: 2px solid var(--barber-red);
}
.navbar .logo {
  font-size: 1.25rem;
  font-weight: bold;
  margin-right: auto;
}
.navbar a,
.navbar button {
  margin-left: 1rem;
  text-decoration: none;
  color: var(--dark-text);
  font-weight: 600;
  background: none;
  border: none;
  cursor: pointer;
}
.navbar a:hover,
.navbar button:hover {
  color: var(--barber-red);
}

/* container wrapper */
.container {
  max-width: 800px;
  margin: 2rem auto;
  padding: 0 1rem;
}

/* cards for reservations/payments/etc. */
.card {
  background: white;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  padding: 1.5rem;
  margin-bottom: 1.5rem;
}

/* forms */
form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
label {
  font-weight: 600;
}
input, select, textarea {
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 1rem;
}
button {
  padding: 0.6rem 1.2rem;
  font-size: 1rem;
  color: white;
  background: var(--barber-red);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  align-self: flex-start;
}
button.secondary {
  background: var(--barber-blue);
}
button:hover {
  opacity: 0.9;
}

/* headings */
h2 {
  margin-top: 0;
  color: var(--barber-red);
}

/* little scissors icon utility */
.icon-scissors::before {
  content: "✂️ ";
}


=== reservations-mf\webpack.config.js ===
// reservations-mf/webpack.config.js
const HtmlWebpackPlugin        = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;

module.exports = (_, argv) => ({
  entry : './src/bootstrap.js',
  mode  : argv.mode || 'development',

  devServer : {
    port              : 3003,
    historyApiFallback: true,
    headers           : {
      'Access-Control-Allow-Origin' : '*',
      'Cross-Origin-Resource-Policy': 'cross-origin',
    },
  },

  // 👉 NO extra runtime chunk, NO splitChunks – just one bundle
  optimization : { splitChunks: false, runtimeChunk: false },

  output : {
    publicPath         : 'auto',
    clean              : true,
    crossOriginLoading : 'anonymous',
  },

  resolve : { extensions: ['.js', '.jsx'] },

  module  : {
    rules : [
      { test: /\.css$/i, use: ['style-loader', 'css-loader'] },
      {
        test   : /\.jsx?$/,
        exclude: /node_modules/,
        use    : { loader: 'babel-loader', options: { presets: ['@babel/preset-react'] } },
      },
    ],
  },

  plugins : [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name    : 'reservationsMf',
      filename: 'remoteEntry.js',
      exposes : { './App': './src/App' },
      shared  : {
        react             : { singleton: true, eager: true, requiredVersion: false },
        'react-dom'       : { singleton: true, eager: true, requiredVersion: false },
        'react-router-dom': { singleton: true, eager: true, requiredVersion: false },
      },
    }),
  ],
});


=== users-mf\Dockerfile ===
# ---------- 1) BUILD stage ----------------------------------------------------
FROM node:18-alpine AS build

WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci            # install deps *inside the image*

COPY . .
RUN npm run build     # → creates /app/dist

# ---------- 2) RUNTIME stage --------------------------------------------------
FROM nginx:alpine

# CORS + SPA fallback
COPY nginx.conf /etc/nginx/conf.d/default.conf

# remove default html and copy our dist
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]


=== users-mf\nginx.conf ===
# nginx.conf  (place it next to each Dockerfile)
server {
  listen 80;
  root /usr/share/nginx/html;

  # allow the JS to be loaded cross-origin
  add_header Access-Control-Allow-Origin "*" always;
  add_header Cross-Origin-Resource-Policy "cross-origin" always;

  # history-fallback for SPA routes
  location / {
    try_files $uri $uri/ /index.html;
  }
}

=== users-mf\package.json ===
{
    "name": "users-mf",
    "version": "1.0.0",
    "private": true,
    "scripts": {
        "start": "webpack serve --env PORT=3002 --open",
        "build": "webpack --mode production"
    },
    "dependencies": {
        "axios": "^1.8.0",
        "react": "^18.3.0",
        "react-dom": "^18.3.0",
        "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
        "@babel/core": "^7.24.5",
        "@babel/preset-react": "^7.24.5",
        "babel-loader": "^9.1.4",
        "css-loader": "^7.1.2",
        "html-webpack-plugin": "^5.5.3",
        "style-loader": "^4.0.0",
        "webpack": "^5.92.0",
        "webpack-cli": "^5.1.4",
        "webpack-dev-server": "^4.15.2"
    }
}


=== users-mf\public\index.html ===
<!doctype html><html lang="en"><head><meta charset="utf-8"><title>users MF</title></head>
<body><div id="root"></div></body></html>


=== users-mf\src\App.js ===
// users-mf/src/App.js
import './styles.css';                 // ← add this
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Routes, Route, Navigate, useNavigate } from 'react-router-dom';

const api = axios.create({
  baseURL: 'http://localhost:4000/api/users',
});

function decodeToken(token) {
  try {
    return JSON.parse(atob(token.split('.')[1]));
  } catch {
    return {};
  }
}

function Layout({ title, children }) {
  return (
    <div className="container">
      <div className="card">
        <h2 className="icon-scissors">{title}</h2>
        {children}
      </div>
    </div>
  );
}

function Register() {
  const [form, setForm] = useState({
    username: '', email: '', password: '', role: 'customer'
  });
  const navigate = useNavigate();

  const handleSubmit = async e => {
    e.preventDefault();
    await api.post('/register', form);
    alert('Registered! Now login.');
    navigate('/login');
  };

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Username
        <input
          placeholder="Username"
          onChange={e => setForm({ ...form, username: e.target.value })}
          required
        />
      </label>

      <label>
        Email
        <input
          placeholder="Email"
          onChange={e => setForm({ ...form, email: e.target.value })}
          required
        />
      </label>

      <label>
        Password
        <input
          type="password"
          placeholder="Password"
          onChange={e => setForm({ ...form, password: e.target.value })}
          required
        />
      </label>

      <label>
        Role
        <select onChange={e => setForm({ ...form, role: e.target.value })}>
          <option value="customer">Customer</option>
          <option value="barber">Barber</option>
        </select>
      </label>

      <button type="submit">Register</button>
    </form>
  );
}

function Login() {
  const [form, setForm] = useState({ username: '', password: '' });
  const navigate = useNavigate();

  const handleSubmit = async e => {
    e.preventDefault();
    const res = await api.post('/login', form);
    localStorage.setItem('token', res.data.token);
    alert('Login successful');
    navigate('/profile');
  };

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Username
        <input
          placeholder="Username"
          onChange={e => setForm({ ...form, username: e.target.value })}
          required
        />
      </label>

      <label>
        Password
        <input
          type="password"
          placeholder="Password"
          onChange={e => setForm({ ...form, password: e.target.value })}
          required
        />
      </label>

      <button type="submit">Login</button>
    </form>
  );
}

function Profile() {
  const [profile, setProfile] = useState(null);
  const token = localStorage.getItem('token');

  useEffect(() => {
    api.get('/profile', { headers: { Authorization: `Bearer ${token}` } })
       .then(res => setProfile(res.data))
       .catch(console.error);
  }, [token]);

  if (!profile) return <p>Loading...</p>;

  return (
    <>
      <p><strong>Username:</strong> {profile.username}</p>
      <p><strong>Email:</strong>    {profile.email}</p>
      <p><strong>Role:</strong>     {profile.role}</p>
    </>
  );
}

export default function App() {
  return (
    <Routes>
      <Route index element={<Navigate to="login" replace />} />
      <Route path="login"    element={<Layout title="Login"><Login /></Layout>} />
      <Route path="register" element={<Layout title="Register"><Register /></Layout>} />
      <Route path="profile"  element={<Layout title="Profile"><Profile /></Layout>} />
      <Route path="*"        element={<Navigate to="login" replace />} />
    </Routes>
  );
}


=== users-mf\src\bootstrap.js ===
import './styles.css';
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from 'react-router-dom';

const mount = el => {
  ReactDOM.createRoot(el).render(
    <BrowserRouter>
      <App />
    </BrowserRouter>
  );
};

export default mount;

if (process.env.NODE_ENV === 'development') {
  const root = document.getElementById('root');
  if (root) mount(root);
}


=== users-mf\src\index.js ===
import('./bootstrap');


=== users-mf\src\styles.css ===
/* src/styles.css */

/* color palette */
:root {
  --barber-red:    #c0392b;
  --barber-blue:   #2980b9;
  --light-gray:    #f5f5f5;
  --dark-text:     #2c3e50;
}

/* global resets & body */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background: var(--light-gray);
  color: var(--dark-text);
  line-height: 1.6;
}

/* barber-pole stripe at top */
.barber-pole {
  height: 6px;
  background: repeating-linear-gradient(
    45deg,
    var(--barber-red) 0,
    var(--barber-red) 10px,
    var(--barber-blue) 10px,
    var(--barber-blue) 20px
  );
}

/* nav bar */
.navbar {
  display: flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  background: white;
  border-bottom: 2px solid var(--barber-red);
}
.navbar .logo {
  font-size: 1.25rem;
  font-weight: bold;
  margin-right: auto;
}
.navbar a,
.navbar button {
  margin-left: 1rem;
  text-decoration: none;
  color: var(--dark-text);
  font-weight: 600;
  background: none;
  border: none;
  cursor: pointer;
}
.navbar a:hover,
.navbar button:hover {
  color: var(--barber-red);
}

/* container wrapper */
.container {
  max-width: 800px;
  margin: 2rem auto;
  padding: 0 1rem;
}

/* cards for reservations/payments/etc. */
.card {
  background: white;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  padding: 1.5rem;
  margin-bottom: 1.5rem;
}

/* forms */
form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
label {
  font-weight: 600;
}
input, select, textarea {
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 1rem;
}
button {
  padding: 0.6rem 1.2rem;
  font-size: 1rem;
  color: white;
  background: var(--barber-red);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  align-self: flex-start;
}
button.secondary {
  background: var(--barber-blue);
}
button:hover {
  opacity: 0.9;
}

/* headings */
h2 {
  margin-top: 0;
  color: var(--barber-red);
}

/* little scissors icon utility */
.icon-scissors::before {
  content: "✂️ ";
}


=== users-mf\webpack.config.js ===
// users-mf/webpack.config.js
const HtmlWebpackPlugin        = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;

module.exports = (_, argv) => ({
  entry : './src/bootstrap.js',
  mode  : argv.mode || 'development',

  devServer : {
    port              : 3002,
    historyApiFallback: true,
    headers           : {
      'Access-Control-Allow-Origin' : '*',
      'Cross-Origin-Resource-Policy': 'cross-origin',
    },
  },

  optimization : { splitChunks: false, runtimeChunk: false },

  output : {
    publicPath         : 'auto',
    clean              : true,
    crossOriginLoading : 'anonymous',
  },

  resolve : { extensions: ['.js', '.jsx'] },

  module  : {
    rules : [
      { test: /\.css$/i, use: ['style-loader', 'css-loader'] },
      {
        test   : /\.jsx?$/,
        exclude: /node_modules/,
        use    : { loader: 'babel-loader', options: { presets: ['@babel/preset-react'] } },
      },
    ],
  },

  plugins : [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name    : 'usersMf',
      filename: 'remoteEntry.js',
      exposes : { './App': './src/App' },
      shared  : {
        react             : { singleton: true, eager: true, requiredVersion: false },
        'react-dom'       : { singleton: true, eager: true, requiredVersion: false },
        'react-router-dom': { singleton: true, eager: true, requiredVersion: false },
      },
    }),
  ],
});


