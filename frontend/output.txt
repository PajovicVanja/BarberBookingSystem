=== container\package.json ===
{
    "name": "container",
    "version": "1.0.0",
    "private": true,
    "scripts": {
      "start": "webpack serve --env PORT=3001 --open",
      "build": "webpack --mode production"
    },
    "dependencies": {
      "react": "^18.3.0",
      "react-dom": "^18.3.0",
      "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
      "@babel/core": "^7.24.5",
      "@babel/preset-react": "^7.24.5",
      "babel-loader": "^9.1.4",
      "html-webpack-plugin": "^5.5.3",
      "webpack": "^5.92.0",
      "webpack-cli": "^5.1.4",
      "webpack-dev-server": "^4.15.2"
    }
  }
  

=== container\public\index.html ===
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Barber Booking – Web UI</title>
</head>
<body>
  <div id="root"></div>
</body>
</html>


=== container\src\bootstrap.js ===
import React, { Suspense, lazy } from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter, Routes, Route, Navigate, Link } from 'react-router-dom';

const UsersApp        = lazy(() => import('UsersMF/App'));
const ReservationsApp = lazy(() => import('ReservationsMF/App'));
const PaymentsApp     = lazy(() => import('PaymentsMF/App'));

const Nav = () => (
  <nav className="flex gap-6 p-4 shadow-md">
    <Link to="/users">Users</Link>
    <Link to="/reservations">Reservations</Link>
    <Link to="/payments">Payments</Link>
  </nav>
);

const Shell = () => (
  <BrowserRouter>
    <Nav />
    <Suspense fallback={<p className="p-4">Loading…</p>}>
      <Routes>
        <Route path="/" element={<Navigate to="/users" replace />} />
        <Route path="/users/*"        element={<UsersApp />} />
        <Route path="/reservations/*" element={<ReservationsApp />} />
        <Route path="/payments/*"     element={<PaymentsApp />} />
      </Routes>
    </Suspense>
  </BrowserRouter>
);

ReactDOM.createRoot(document.getElementById('root')).render(<Shell />);


=== container\src\index.js ===
// ONLY for standalone dev – single-spa style bootstrap
import('./bootstrap');


=== container\webpack.config.js ===
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;
const path = require('path');

module.exports = (_, argv) => ({
  entry: './src/bootstrap.js',
  mode: argv.mode || 'development',
  devServer: { port: 3001, historyApiFallback: true },
  output: { publicPath: 'auto', clean: true },
  resolve: { extensions: ['.js', '.jsx'] },
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: { presets: ['@babel/preset-react'] }
        }
      }
    ]
  },
  plugins: [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name: 'container',
      remotes: {
        UsersMF: 'usersMf@http://localhost:3002/remoteEntry.js',
        ReservationsMF: 'reservationsMf@http://localhost:3003/remoteEntry.js',
        PaymentsMF: 'paymentsMf@http://localhost:3004/remoteEntry.js'
      },
      shared: {
        react:      { singleton: true, eager: true, requiredVersion: false },
        'react-dom':{ singleton: true, eager: true, requiredVersion: false }
      }
    })
  ]
});


=== payments-mf\package.json ===
{
    "name": "payments-mf",
    "version": "1.0.0",
    "private": true,
    "scripts": {
      "start": "webpack serve --env PORT=3004 --open", 
      "build": "webpack --mode production"
    },
    "dependencies": {
      "axios": "^1.8.0",
      "react": "^18.3.0",
      "react-dom": "^18.3.0",
      "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
      "@babel/core": "^7.24.5",
      "@babel/preset-react": "^7.24.5",
      "babel-loader": "^9.1.4",
      "html-webpack-plugin": "^5.5.3",
      "webpack": "^5.92.0",
      "webpack-cli": "^5.1.4",
      "webpack-dev-server": "^4.15.2"
    }
  }
  

=== payments-mf\public\index.html ===
<!doctype html><html lang="en"><head><meta charset="utf-8"><title>payments MF</title></head>
<body><div id="root"></div></body></html>


=== payments-mf\src\App.js ===
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Routes, Route } from 'react-router-dom';

const api = axios.create({
  baseURL: 'http://localhost:4000/api/payments',
});

function CreatePayment() {
  const [form, setForm] = useState({ user_id: '', reservation_id: '', amount: '', payment_method: 'cash' });

  const handleSubmit = async (e) => {
    e.preventDefault();
    await api.post('', form);
    alert('Payment processed!');
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Create Payment</h2>
      <input placeholder="User ID" onChange={(e) => setForm({ ...form, user_id: e.target.value })} required />
      <input placeholder="Reservation ID" onChange={(e) => setForm({ ...form, reservation_id: e.target.value })} required />
      <input type="number" placeholder="Amount" onChange={(e) => setForm({ ...form, amount: e.target.value })} required />
      <select onChange={(e) => setForm({ ...form, payment_method: e.target.value })}>
        <option value="cash">Cash</option>
        <option value="credit_card">Credit Card</option>
      </select>
      <button type="submit">Pay</button>
    </form>
  );
}

function ListPayments() {
  const [payments, setPayments] = useState([]);
  const [userId, setUserId] = useState('');

  const fetchPayments = async () => {
    const res = await api.get(`/user/${userId}`);
    setPayments(res.data);
  };

  return (
    <div>
      <h2>List Payments</h2>
      <input placeholder="User ID" onChange={(e) => setUserId(e.target.value)} />
      <button onClick={fetchPayments}>Fetch</button>
      <ul>
        {payments.map(p => (
          <li key={p.id}>{p.amount}€ - {p.status}</li>
        ))}
      </ul>
    </div>
  );
}

export default function App() {
  return (
    <Routes>
      <Route path="/" element={<CreatePayment />} />
      <Route path="/list" element={<ListPayments />} />
    </Routes>
  );
}


=== payments-mf\src\bootstrap.js ===
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from 'react-router-dom';

const mount = (el) => {
  ReactDOM.createRoot(el).render(
    <BrowserRouter>
      <App />
    </BrowserRouter>
  );
};

// Export it for Module Federation
export default mount;

// If running standalone (npm start), mount immediately:
if (process.env.NODE_ENV === 'development') {
  const root = document.getElementById('root');
  if (root) {
    mount(root);
  }
}


=== payments-mf\src\index.js ===
import('./bootstrap');


=== payments-mf\webpack.config.js ===
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;
const path = require('path');

module.exports = (_, argv) => ({
  entry: './src/bootstrap.js',
  mode: argv.mode || 'development',
  devServer: { port: 3004, historyApiFallback: true },
  output: { publicPath: 'auto', clean: true },
  resolve: { extensions: ['.js', '.jsx'] },
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: { presets: ['@babel/preset-react'] }
        }
      }
    ]
  },
  plugins: [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name: 'paymentsMf',
      filename: 'remoteEntry.js',
      exposes: { './App': './src/App' },
      shared: {
          react:      { singleton: true, eager: true, requiredVersion: false },
          'react-dom':{ singleton: true, eager: true, requiredVersion: false }
      }
    })
  ]
});


=== reservations-mf\package.json ===
{
    "name": "reservations-mf",
    "version": "1.0.0",
    "private": true,
    "scripts": {
      "start": "webpack serve --env PORT=3003 --open", 
      "build": "webpack --mode production"
    },
    "dependencies": {
      "axios": "^1.8.0",
      "react": "^18.3.0",
      "react-dom": "^18.3.0",
      "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
      "@babel/core": "^7.24.5",
      "@babel/preset-react": "^7.24.5",
      "babel-loader": "^9.1.4",
      "html-webpack-plugin": "^5.5.3",
      "webpack": "^5.92.0",
      "webpack-cli": "^5.1.4",
      "webpack-dev-server": "^4.15.2"
    }
  }
  

=== reservations-mf\public\index.html ===
<!doctype html><html lang="en"><head><meta charset="utf-8"><title>reservations MF</title></head>
<body><div id="root"></div></body></html>


=== reservations-mf\src\App.js ===
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Routes, Route } from 'react-router-dom';

const api = axios.create({
  baseURL: 'http://localhost:4000/api/reservations',
});

function CreateReservation() {
  const [form, setForm] = useState({ user_id: '', barber_id: '', appointment_time: '' });

  const handleSubmit = async (e) => {
    e.preventDefault();
    await api.post('', form);
    alert('Reservation created!');
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Create Reservation</h2>
      <input placeholder="User ID" onChange={(e) => setForm({ ...form, user_id: e.target.value })} required />
      <input placeholder="Barber ID" onChange={(e) => setForm({ ...form, barber_id: e.target.value })} required />
      <input type="datetime-local" onChange={(e) => setForm({ ...form, appointment_time: e.target.value })} required />
      <button type="submit">Create</button>
    </form>
  );
}

function ListReservations() {
  const [reservations, setReservations] = useState([]);
  const [userId, setUserId] = useState('');

  const fetchReservations = async () => {
    const res = await api.get(`/user/${userId}`);
    setReservations(res.data);
  };

  return (
    <div>
      <h2>List Reservations</h2>
      <input placeholder="User ID" onChange={(e) => setUserId(e.target.value)} />
      <button onClick={fetchReservations}>Fetch</button>
      <ul>
        {reservations.map(r => (
          <li key={r.id}>{r.appointment_time} - {r.status}</li>
        ))}
      </ul>
    </div>
  );
}

export default function App() {
  return (
    <Routes>
      <Route path="/" element={<CreateReservation />} />
      <Route path="/list" element={<ListReservations />} />
    </Routes>
  );
}


=== reservations-mf\src\bootstrap.js ===
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from 'react-router-dom';

const mount = (el) => {
  ReactDOM.createRoot(el).render(
    <BrowserRouter>
      <App />
    </BrowserRouter>
  );
};

// Export it for Module Federation
export default mount;

// If running standalone (npm start), mount immediately:
if (process.env.NODE_ENV === 'development') {
  const root = document.getElementById('root');
  if (root) {
    mount(root);
  }
}


=== reservations-mf\src\index.js ===
import('./bootstrap');


=== reservations-mf\webpack.config.js ===
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;
const path = require('path');

module.exports = (_, argv) => ({
  entry: './src/bootstrap.js',
  mode: argv.mode || 'development',
  devServer: { port: 3003, historyApiFallback: true },
  output: { publicPath: 'auto', clean: true },
  resolve: { extensions: ['.js', '.jsx'] },
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: { presets: ['@babel/preset-react'] }
        }
      }
    ]
  },
  plugins: [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name: 'reservationsMf',
      filename: 'remoteEntry.js',
      exposes: { './App': './src/App' },
      shared: {
        react:      { singleton: true, eager: true, requiredVersion: false },
        'react-dom':{ singleton: true, eager: true, requiredVersion: false }
      }
    })
  ]
});


=== users-mf\package.json ===
{
    "name": "users-mf",
    "version": "1.0.0",
    "private": true,
    "scripts": {
      "start": "webpack serve --env PORT=3002 --open", 
      "build": "webpack --mode production"
    },
    "dependencies": {
      "axios": "^1.8.0",
      "react": "^18.3.0",
      "react-dom": "^18.3.0",
      "react-router-dom": "^6.23.0"
    },
    "devDependencies": {
      "@babel/core": "^7.24.5",
      "@babel/preset-react": "^7.24.5",
      "babel-loader": "^9.1.4",
      "html-webpack-plugin": "^5.5.3",
      "webpack": "^5.92.0",
      "webpack-cli": "^5.1.4",
      "webpack-dev-server": "^4.15.2"
    }
  }
  

=== users-mf\public\index.html ===
<!doctype html><html lang="en"><head><meta charset="utf-8"><title>users MF</title></head>
<body><div id="root"></div></body></html>


=== users-mf\src\App.js ===
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Routes, Route, useNavigate } from 'react-router-dom';

const api = axios.create({
  baseURL: 'http://localhost:4000/api/users',
});

function Register() {
  const [form, setForm] = useState({ username: '', email: '', password: '', role: 'customer' });
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    await api.post('/register', form);
    alert('Registered! Now login.');
    navigate('/login');
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Register</h2>
      <input placeholder="Username" onChange={(e) => setForm({ ...form, username: e.target.value })} required />
      <input placeholder="Email" onChange={(e) => setForm({ ...form, email: e.target.value })} required />
      <input type="password" placeholder="Password" onChange={(e) => setForm({ ...form, password: e.target.value })} required />
      <select onChange={(e) => setForm({ ...form, role: e.target.value })}>
        <option value="customer">Customer</option>
        <option value="barber">Barber</option>
      </select>
      <button type="submit">Register</button>
    </form>
  );
}

function Login() {
  const [form, setForm] = useState({ username: '', password: '' });
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    const res = await api.post('/login', form);
    localStorage.setItem('token', res.data.token);
    alert('Login successful');
    navigate('/profile');
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Login</h2>
      <input placeholder="Username" onChange={(e) => setForm({ ...form, username: e.target.value })} required />
      <input type="password" placeholder="Password" onChange={(e) => setForm({ ...form, password: e.target.value })} required />
      <button type="submit">Login</button>
    </form>
  );
}

function Profile() {
  const [profile, setProfile] = useState(null);
  const token = localStorage.getItem('token');

  useEffect(() => {
    api.get('/profile', { headers: { Authorization: `Bearer ${token}` } })
      .then(res => setProfile(res.data))
      .catch(console.error);
  }, []);

  if (!profile) return <p>Loading...</p>;

  return (
    <div>
      <h2>Profile</h2>
      <p>Username: {profile.username}</p>
      <p>Email: {profile.email}</p>
      <p>Role: {profile.role}</p>
    </div>
  );
}

export default function App() {
  return (
    <Routes>
      <Route path="/" element={<Register />} />
      <Route path="/login" element={<Login />} />
      <Route path="/profile" element={<Profile />} />
    </Routes>
  );
}


=== users-mf\src\bootstrap.js ===
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from 'react-router-dom';

const mount = (el) => {
  ReactDOM.createRoot(el).render(
    <BrowserRouter>
      <App />
    </BrowserRouter>
  );
};

// Export it for Module Federation
export default mount;

// If running standalone (npm start), mount immediately:
if (process.env.NODE_ENV === 'development') {
  const root = document.getElementById('root');
  if (root) {
    mount(root);
  }
}


=== users-mf\src\index.js ===
import('./bootstrap');


=== users-mf\webpack.config.js ===
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;
const path = require('path');

module.exports = (_, argv) => ({
  entry: './src/bootstrap.js',
  mode: argv.mode || 'development',
  devServer: { port: 3002, historyApiFallback: true },
  output: { publicPath: 'auto', clean: true },
  resolve: { extensions: ['.js', '.jsx'] },
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: { presets: ['@babel/preset-react'] }
        }
      }
    ]
  },
  plugins: [
    new HtmlWebpackPlugin({ template: './public/index.html' }),
    new ModuleFederationPlugin({
      name: 'usersMf',
      filename: 'remoteEntry.js',
      exposes: { './App': './src/App' },
      shared: {
        react:      { singleton: true, eager: true, requiredVersion: false },
        'react-dom':{ singleton: true, eager: true, requiredVersion: false }
      }
    })
  ]
});


