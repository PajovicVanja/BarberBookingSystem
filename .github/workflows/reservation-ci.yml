name: Reservation Service CI

on:
  push:
    paths:
      - 'reservation-service/**'
      - '.github/workflows/reservation-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: reservation-service

    services:
      rabbitmq:
        image: rabbitmq:3.11
        ports:
          - 5672:5672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install grpcio-tools supervisor

      - name: 🔁 Generate gRPC stubs
        run: |
          python -m grpc_tools.protoc -I./app/proto \
            --python_out=. \
            --grpc_python_out=. \
            app/proto/reservation.proto

      - name: ⚙️ Set up environment
        run: |
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
          echo "DATABASE_NAME=reservationdb" >> .env
          echo "GRPC_SERVER_PORT=50051" >> .env
          echo "RABBITMQ_URL=amqp://guest:guest@localhost:5672/" >> .env
          echo "RABBITMQ_QUEUE=reservation_notifications" >> .env

      - name: 🧠 Start FastAPI + gRPC with supervisord
        run: |
          echo "
          [supervisord]
          nodaemon=true

          [program:fastapi]
          command=python app/main.py
          directory=.
          autostart=true
          autorestart=true
          stdout_logfile=fastapi.log
          stderr_logfile=fastapi.err

          [program:grpc]
          command=python app/grpc_server.py
          directory=.
          autostart=true
          autorestart=true
          stdout_logfile=grpc.log
          stderr_logfile=grpc.err
          " > supervisord.conf

          supervisord -c supervisord.conf &
          sleep 10  # give it a bit more time to start both services

      - name: 🧪 Run tests
        env:
          PYTHONPATH: /home/runner/work/BarberBookingSystem/BarberBookingSystem/reservation-service
        run: |
          pytest -s tests/

      - name: 🪵 Show logs if failed
        if: failure()
        run: |
          echo "===== FASTAPI LOG ====="
          cat fastapi.log || true
          echo "===== FASTAPI ERR ====="
          cat fastapi.err || true
          echo "===== GRPC LOG ====="
          cat grpc.log || true
          echo "===== GRPC ERR ====="
          cat grpc.err || true
